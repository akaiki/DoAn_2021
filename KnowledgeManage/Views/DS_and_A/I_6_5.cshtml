
@{
    ViewData["Title"] = "I_6_5";
    Layout = "~/Views/DS_and_A/Menu.cshtml";
}
<style>
    .zoom {
        /*padding: 50px;*/
        background-color: green;
        transition: transform .2s; /* Animation */
        margin: 0 auto;
    }

        .zoom:hover {
            transform: scale(1.3); /* (130% zoom - Note: if the zoom is too large, it will go outside of the viewport) */
        }

    img {
        display: inline-block;
        max-width: 100%;
        max-height: 100%;
        display: block;
        margin: 0 inherit;
    }
</style>
<div style="padding-left: 15%; padding-right: 15%; ">
    <h1>CÂY HEAP</h1>
    <div class="container" id="I_6_5_1">
        <h3>Khái niệm cây heap</h3>
        <p>Heap là loại cấu trúc dữ liệu dạng cây, tất cả các node trong cây đó được sắp xếp theo một thứ tự nhất định, có thể là theo chiều tăng dần hoặc giảm dần.</p>
        <p>Giả sửu ta có A là node cha của B, tuân theo định nghĩa của heap, nếu giá trị của node A lớn hơn giá trị của node B thì quan hệ này cũng được áp dụng cho toàn bộ cây. Có nghĩa là giá trị của node B sẽ lớn hơn giá trị của node con của nó và cứ vậy, thứ tự được áp dụng cho toàn bộ cây.</p>
        <p>Số con tối đa của một node trong cây heap phụ thuộc vào từng loại heap. Trong thực tế ta có nhiều loại heap nhưng loại được dùng phổ biến là heap nhị phân. Nên ta chỉ xét cây heap nhị phân. Để hiểu rõ hơn về cây nhị phân, các bạn có thể xem lại <b>cây nhị phân</b> <a href="I_6_4">tại đây</a></p>
        <img src="~/Image/heap.jpg" class="zoom" style="text-align:center" />
        <p style="text-align: center"><b>Cây heap nhị phân hoàn thiện</b></p>
        <br />
        <p>Có thể thấy trong hình trên, các node trong cây đều có giá trị tuân theo một quy luật, đó là giá trị của node cha luôn luôn lớn hơn giá trị của node con.</p>
    </div>
    <div class="container" id="I_6_5_2">
        <h3>Cài đặt cây heap</h3>
        <p>Các node trong heap có thể được sắp xếp theo thứ tự tăng dần hoặc giảm dần nên ta có 2 loại heap là max heap và min heap. Do đó ta cũng có 2 cách cài đặt:</p>
        <ul>
            <li> - <a href="#max_heap">Cài đặt max heap</a></li>
            <li> - <a href="#min_heap">Cài đặt min heap</a></li>
        </ul>
        <p>Việc này kết hợp với <a href="#I_6_5_3">duyệt cây heap</a> sẽ là thuật toán sắp xếp vun đống (heap sort)</p>
        <hr />
        <div id="max_heap">
            <p><b>Cài đặt max heap</b></p>
            <p>Với max heap, giá trị của node cha luôn luôn lớn hơn hoặc bằng giá trị của node con, node gốc có giá trị lớn nhất trong cây.</p>
            <p>Ta có các bước để chuyển một mảng thành max-heap:</p>
            <ul>
                <li><p> B1. Lấy một phần tử từ mảng.</p></li>
                <li><p> B2. So sánh giá trị của nút con với giá trị cha.</p></li>
                <li><p> B3. Nếu giá trị của cha là nhỏ hơn con thì tráo đổi chúng.</p></li>
                <li><p> B4. Lặp lại B2 và B3 cho đến khi vẫn duy trì đặc điểm của max heap.</p></li>
            </ul>
            <p>Giả sử ta có mảng: {0, 1, 2, 3, 4, 5, 6}.</p>
            <p>Ta có minh họa xây dựng max heap sau:</p>
            <img src="~/Image/Max-heap.gif" class="zoom" style="text-align:center" />
            <br />
        </div>
        <div id="min_heap">
            <p><b>Cài đặt min heap</b></p>
            <p>Với min heap, giá trị của node cha luôn luôn bé hơn hoặc bằng giá trị của node con, node gốc có giá trị bé nhất trong cây.</p>
            <p>Ta có các bước để chuyển một mảng thành min heap:</p>
            <ul>
                <li><p> B1. Lấy một phần tử từ mảng.</p></li>
                <li><p> B2. So sánh giá trị của nút con với giá trị cha.</p></li>
                <li><p> B3. Nếu giá trị của cha là lớn hơn con thì tráo đổi chúng.</p></li>
                <li><p> B4. Lặp lại B2 và B3 cho đến khi vẫn duy trì đặc điểm của max heap.</p></li>
            </ul>
            <p>Giả sử ta có mảng: {4, 1, 2, 0, 6, 3, 5}.</p>
            <p>Ta có minh họa xây dựng max heap sau:</p>
            <img src="~/Image/Min-heap.gif" class="zoom" style="text-align:center" />
            <br />
        </div>
    </div>
    <div class="container" id="I_6_5_3">
        <h3>Duyệt cây heap</h3>
        <p>Do cây heap ở đây ta xét là cây heap nhị phân nên các cách duyệt cây đều giống như <a href="I_6_4#I_6_4_3">duyệt cây nhị phân</a>.</p>
    </div>
</div>
<div>
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
</div>