#pragma checksum "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\DS_and_A\II_2_1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b10030fff74279935fea56569c9c51fbdb413b78"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DS_and_A_II_2_1), @"mvc.1.0.view", @"/Views/DS_and_A/II_2_1.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\_ViewImports.cshtml"
using KnowledgeManage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\_ViewImports.cshtml"
using KnowledgeManage.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b10030fff74279935fea56569c9c51fbdb413b78", @"/Views/DS_and_A/II_2_1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d8b91396dfbb5c43e5379ee682f129446bb1c6c7", @"/Views/_ViewImports.cshtml")]
    public class Views_DS_and_A_II_2_1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Image/linear_search.gif"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\DS_and_A\II_2_1.cshtml"
  
    ViewData["Title"] = "II_2_1";
    Layout = "~/Views/DS_and_A/Menu.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    img {
        display: inline-block;
        max-width: 100%;
        max-height: 100%;
        display: block;
        margin: 0 auto;
        text-align: center;
    }
</style>
<div style=""padding-left: 15%; padding-right: 15%; "">
    <div id=""II_2_1"">
        <h3>GIẢI THUẬT TÌM KIẾM TUYẾN TÍNH</h3>
        <div id=""II_2_1_1"">
            <h5>Khái niệm giải thuật tìm kiếm tuyến tính</h5>
            <p>Tìm kiếm tuyến tính (Linear Search) hay tìm kiếm tuần tự (Sequential Search) là một phương pháp tìm kiếm đơn giản nhất. Lần lượt duyệt qua toàn bộ các bản ghi một cách tuần từ. Tạo mỗi bước, khóa của bản ghi sẽ được so sạn với giá trị cần tìm. Quá trình tìm kiếm kết thúc khi đã tìm thất bản ghi có khóa thở mãn hoặc đã duyệt hết danh sách.</p>
            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b10030fff74279935fea56569c9c51fbdb413b784592", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>
        <hr />
        <div id=""II_2_1_2"">
            <h5>Xây dựng giải thuật tìm kiếm tuyến tính</h5>
            <p>Ý tưởng cho giải thuật tìm kiếm tuyến tính được trình bày thành các bước như sau:</p>
            <div class=""card"" style=""background-color: #F1F1F1"">
                <p>Giả sử ta có mảng A và giá trị x cần tìm</p>
                <ul>
                    <li><b>Bước 1: </b>Thiết lập i = 0, với i là vị trí phần tử đang duyệt</li>
                    <li><b>Bước 2: </b>Nếu i > n-1 thì chuyển tới <b>bước 7</b>, với n là độ lớn của mảng</li>
                    <li><b>Bước 3: </b>Nếu A[i] = x thì chuyển tới <b>bước 6</b></li>
                    <li><b>Bước 4: </b>Thiết lập i thành i + 1</li>
                    <li><b>Bước 5: </b>Tới <b>bước 2</b></li>
                    <li><b>Bước 6: </b>In phần tử x được tìm thấy tại chỉ mục i và tới <b>bước 8</b></li>
                    <li><b>Bước 7: </b>In phần tử không được tìm thấy</li>
                    <li><b>Bước 8");
            WriteLiteral(@": </b>Thoát</li>
                </ul>
            </div><br />
            <hr />
            <p>Giải thuật mẫu cho tìm kiếm tuyến tính</p>
            <div class=""card"" style=""background-color: #F1F1F1"">
<pre style=""padding: 1em; margin: .5em 0; overflow: auto;"" class=""card-body"">
<code>
Bắt đầu hàm linear_search (list, value)
                <span style=""color: #008"">for</span> <i>mỗi phần tử trong danh sách</i>
                <span>if</span> item == value
                <span>return</span> <i>vị trí của phần tử</i>
        kết thúc <span>if</span>
    kết thúc <span>for</span>
kết thúc hàm
</code> </pre>
            </div><br />
            <hr />
            <p><b>Ví dụ: </b>Thủ tục tìm kiếm tuyến tính trên một mảng các số nguyên được viết bằng C như sau:</p>
            <div class=""card"" style=""background-color: #F1F1F1"">
<pre style=""padding: 1em; margin: .5em 0; overflow: auto;"" class=""card-body"">
<code>
int sequential_search (int *a, int x, int n){
    int i;
    for (i = 0; ");
            WriteLiteral("i < n; i++){\r\n        if");
            BeginWriteAttribute("(a[i]", " (a[i] =", 2994, "", 3002, 0);
            EndWriteAttribute();
            WriteLiteral(@"= x){
            return(i);    
        }
    }
    return (-1);
}
</code> </pre>
            </div><br />
            <p>Thủ tục này tiến hành duyệt từ đầu mảng. Nếu tại vị trí nào đó, giá trị phần tử bằng với giá trị cần tìm thì hàm trả về chỉ số lượng tương ứng của phần tử trong mảng. Nêu skhoong tìm thấy giá trị trong toan bộ mảng thì hàm trả về giá trị là -1.</p>
            <p>Thuật toán tìm kiếm tuần tự có thời gian thực hiện là O(n). Trong trường hợp xấu nhất, thuật toán mất n lần thực hiện so sánh và mất khoảng n/2 lần so sánh trong trường hợp trung bình.</p>
        </div>
    </div>
    <div>
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
    </div>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
