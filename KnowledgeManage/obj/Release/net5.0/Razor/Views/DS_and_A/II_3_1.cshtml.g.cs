#pragma checksum "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\DS_and_A\II_3_1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "807572fcd38cbf4720309979a74010b7969a6b31"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DS_and_A_II_3_1), @"mvc.1.0.view", @"/Views/DS_and_A/II_3_1.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\_ViewImports.cshtml"
using KnowledgeManage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\_ViewImports.cshtml"
using KnowledgeManage.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"807572fcd38cbf4720309979a74010b7969a6b31", @"/Views/DS_and_A/II_3_1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d8b91396dfbb5c43e5379ee682f129446bb1c6c7", @"/Views/_ViewImports.cshtml")]
    public class Views_DS_and_A_II_3_1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Image/Bubble-sort.gif"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\DS_and_A\II_3_1.cshtml"
  
    ViewData["Title"] = "II_3_1";
    Layout = "~/Views/DS_and_A/Menu.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    img {
        display: inline-block;
        max-width: 100%;
        max-height: 100%;
        display: block;
        margin: 0 auto;
        text-align: center;
    }
</style>

<div style=""padding-left: 15%; padding-right: 15%; "">
    <div id=""II_3_1"">
        <h3>GIẢI THUẬT SẮP XẾP NỔI BỌT (BUBBLE SORT)</h3>
        <div id=""II_3_1_1"">
            <h5>Khái niệm giải thuật sắp xếp nổi bọt</h5>
            <p>Sắp xếp nổi bọt là một giải thuật sắp xếp đơn giản. Giải thuật sắp xếp này được tiến hành dựa trên việc so sánh cặp phần tử liền kề nhau và tráo đổi thứ tự nếu chúng không theo thứ tự.</p>
            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "807572fcd38cbf4720309979a74010b7969a6b314444", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>
        <hr />
        <div id=""II_3_1_2"">
            <h5>Xây dựng giải thuật sắp xếp nổi bọt</h5>
            <p>Ý tưởng cho giải thuật sắp xếp nổi bọt được trình bày thành các bước như sau:</p>
            <div class=""card"" style=""background-color: #F1F1F1"">
                <p>Giả sử ta có mảng a có n phần tử</p>
                <ul>
                    <li><b>Bước 1: </b>Gán i = 0, là phần tử đầu tiên</li>
                    <li><b>Bước 2: </b>Lần lượt so sánh và đổi chỗ (nếu cần) từ phải sang trái đối với các phần tử từ a[n] đến a[i]. Với biến gán j = n-i. Lặp lại khi j > i.</li>
                    <li><b>Bước 3: </b>i = i + 1</li>
                    <li><b>Bước 4: </b>Nêu i < n, quay lại <b>bước 2</b>. Ngược lại, dừng, dãy đã cho đã sắp xếp đúng vị trí.</li>
                </ul>
            </div><br />
            <hr />
            <p>Giải thuật mẫu cho sắp xếp nổi bọt</p>
            <div class=""card"" style=""background-color: #F1F1F1"">
<pre style=""padding: 1em; m");
            WriteLiteral(@"argin: .5em 0; overflow: auto;"" class=""card-body"">
<code>
Bắt đầu giải thuật BubbleSort(list)

    <span style=""color: #008"">for</span> tất cả phần tử trong list
        <span style=""color: #008"">if</span> list[i] > list[i+1]
            swap(list[i], list[i+1])
        kết thúc if
    kết thúc for
    
    return list
Kết thúc BubbleSort
</code> </pre>
            </div><br />
            <hr />
            <p><b>Ví dụ: </b>Thủ tục sắp xếp nổi bọt trên một mảng các số nguyên được viết bằng C như sau:</p>
            <div class=""card"" style=""background-color: #F1F1F1"">
<pre style=""padding: 1em; margin: .5em 0; overflow: auto;"" class=""card-body"">
<code>
void Bubble_sort(int *a, int n)
{
    int i, j;
    for (int i = 0; i < n - 1; i++){
        for (int");
            BeginWriteAttribute("j", " j =", 2583, "", 2587, 0);
            EndWriteAttribute();
            WriteLiteral(" n - 1; j > i; j--){\r\n            if (a[j] < a[j - 1]){\r\n                int");
            BeginWriteAttribute("t", " t =", 2663, "", 2667, 0);
            EndWriteAttribute();
            WriteLiteral(" a[j];");
            BeginWriteAttribute("a[j]", "\r\n                a[j] =", 2673, "", 2697, 0);
            EndWriteAttribute();
            WriteLiteral(" a[i];");
            BeginWriteAttribute("a[i]", "\r\n                a[i] =", 2703, "", 2727, 0);
            EndWriteAttribute();
            WriteLiteral(@" t;
            }
        }
    }
}
</code> </pre>
            </div><br />
            <p>Lần duyệt đầu tiên cần khoảng n - 1 phép so sánh và đổi chỗ để làm nổi phần tử nhỏ nhất lên đầu. Lần duyệt thứ 2 cần khoảng n - 2 phép toán, .v.v. Tổng cộng, số phép so sánh cần thực hiện là:</p>
            <p><code>(n - 1) + (n - 2) + ... + 2 + 1 = n*(n - 1)/2</code></p>
            <p>Như vậy, độ phức tạp cũng giải thuật sắp xếp nổi bọt là O(n<sup>2</sup>)</p>
        </div>
    </div>
    <div>
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
    </div>
</div>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
