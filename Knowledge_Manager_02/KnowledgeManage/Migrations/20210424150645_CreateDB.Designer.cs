// <auto-generated />
using KnowledgeManage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KnowledgeManage.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210424150645_CreateDB")]
    partial class CreateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KnowledgeManage.Models.Chapter", b =>
                {
                    b.Property<string>("Id_Chap")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Key_Chap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link_Chap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_Chap")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Chap");

                    b.ToTable("Chapter");
                });

            modelBuilder.Entity("KnowledgeManage.Models.Knowledge", b =>
                {
                    b.Property<string>("Id_Knowledge")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChapterId_Chap")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id_PreKnowledge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key_Knowledge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link_Knowledge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_Knowledge")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Knowledge");

                    b.HasIndex("ChapterId_Chap");

                    b.ToTable("Knowledge");
                });

            modelBuilder.Entity("KnowledgeManage.Models.Relationship", b =>
                {
                    b.Property<string>("Id_Relationship")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ID_Knowledge_A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID_Knowledge_B")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id_Knowledge_A")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id_Knowledge_B")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id_Relationship");

                    b.HasIndex("Id_Knowledge_A");

                    b.HasIndex("Id_Knowledge_B");

                    b.ToTable("Relationship");
                });

            modelBuilder.Entity("KnowledgeManage.Models.Knowledge", b =>
                {
                    b.HasOne("KnowledgeManage.Models.Chapter", "Chapter")
                        .WithMany("Knowledge")
                        .HasForeignKey("ChapterId_Chap");

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("KnowledgeManage.Models.Relationship", b =>
                {
                    b.HasOne("KnowledgeManage.Models.Knowledge", "Knowledge_A")
                        .WithMany("Relationship_Knowledge_A")
                        .HasForeignKey("Id_Knowledge_A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KnowledgeManage.Models.Knowledge", "Knowledge_B")
                        .WithMany("Relationship_Knowledge_B")
                        .HasForeignKey("Id_Knowledge_B")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Knowledge_A");

                    b.Navigation("Knowledge_B");
                });

            modelBuilder.Entity("KnowledgeManage.Models.Chapter", b =>
                {
                    b.Navigation("Knowledge");
                });

            modelBuilder.Entity("KnowledgeManage.Models.Knowledge", b =>
                {
                    b.Navigation("Relationship_Knowledge_A");

                    b.Navigation("Relationship_Knowledge_B");
                });
#pragma warning restore 612, 618
        }
    }
}
