#pragma checksum "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\DS_and_A\III_7.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "353ce422d2f2c1fe0f86cfabea434ee6ab7e11f5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DS_and_A_III_7), @"mvc.1.0.view", @"/Views/DS_and_A/III_7.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\_ViewImports.cshtml"
using KnowledgeManage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\_ViewImports.cshtml"
using KnowledgeManage.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"353ce422d2f2c1fe0f86cfabea434ee6ab7e11f5", @"/Views/DS_and_A/III_7.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d8b91396dfbb5c43e5379ee682f129446bb1c6c7", @"/Views/_ViewImports.cshtml")]
    public class Views_DS_and_A_III_7 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Image/DoThi/DoThi.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\DS_and_A\III_7.cshtml"
  
    ViewData["Title"] = "III_7";
    Layout = "~/Views/DS_and_A/Menu.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    img {
        display: inline-block;
        max-width: 100%;
        max-height: 100%;
        display: block;
        margin: 0 auto;
        text-align: center;
    }
</style>

<div id=""accordion"" style=""padding-left: 15%; padding-right: 15%; "">
    <h1>BÀI TẬP VỀ ĐỒ THỊ</h1>
    <p class=""alert-warning"">BẠN CÓ THỂ NHẤN VÀO ĐỂ XEM BÀI GIẢI</p>
    <h3>Bài tập phổ biến</h3>
    <div id=""accordion1"">
        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai1"">
                    Bài 1: Áp dụng tìm kiếm theo chiều rộng để tìm đường đi từ A tới G trong đồ thị sau:
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "353ce422d2f2c1fe0f86cfabea434ee6ab7e11f54505", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                </a>
            </div>
            <div id=""Bai1"" class=""collapse container"" data-parent=""#accordion"">
                <br />
                <u><b>Ý tưởng bài toán</b></u>
                <p>Ta có thuật giải tìm kiếm đường đi từ A -> G theo chiều rộng như sau:</p>
                <p><b><i>O</i></b> = [A], <b><i>C</i></b> = {}</p>
                <p>While <b><i>O</i></b> rỗng {</p>
                <ul>
                    <li> - Lấy p từ đầu <b><i>O</i></b>.</li>
                    <li> - Duyệt p.</li>
                    <li> - Bỏ p vào <b><i>C</i></b>.</li>
                    <li> - Với mỗi q kề p, q không thuộc <b><i>C</i></b>: Bỏ q vào cuối <b><i>O</i></b>.</li>
                </ul>
                <p>}</p>
                <hr />
                <u><b>Bài giải:</b></u>
                <p>Ta có: <b><i>O</i></b> = [A]; <b><i>C</i></b> = {};</p>
                <p>Gọi <b><i>Father</i></b> là biến lưu cha của mỗi đỉnh trên đường đi</p>
                <p><b>Bước 1:</b>");
            WriteLiteral(@"</p>
                <ul>
                    <li>- Lấy A từ <b><i>O</i></b>.</li>
                    <li>- Duyệt A.</li>
                    <li>- <b><i>C</i></b> = {A}.</li>
                    <li>- <b><i>O</i></b> = [B, C].</li>
                    <li>- <b><i>Father</i></b>[B,C] = A.</li>
                </ul>
                <p><b>Bước 2:</b></p>
                <ul>
                    <li>- Lấy B từ <b><i>O</i></b>.</li>
                    <li>- Duyệt B.</li>
                    <li>- <b><i>C</i></b> = {A, B}.</li>
                    <li>- <b><i>O</i></b> = [C, D].</li>
                    <li>- <b><i>Father</i></b>[D] = B. Chọn D vì C và B không kề nhau.</li>
                </ul>
                <p><b>Bước 3:</b></p>
                <ul>
                    <li>- Lấy C từ <b><i>O</i></b>.</li>
                    <li>- Duyệt C.</li>
                    <li>- <b><i>C</i></b> = {A, B, C}.</li>
                    <li>- <b><i>O</i></b> = [D].</li>
                    <li>- <b><");
            WriteLiteral(@"i>Father</i></b>[D] = C.</li>
                </ul>
                <p><b>Bước 4:</b></p>
                <ul>
                    <li>- Lấy D từ <b><i>O</i></b>.</li>
                    <li>- Duyệt D.</li>
                    <li>- <b><i>C</i></b> = {A, B, C, D}.</li>
                    <li>- <b><i>O</i></b> = [G].</li>
                    <li>- <b><i>Father</i></b>[G] = D.</li>
                </ul>
                <p><b>Bước 5:</b></p>
                <ul>
                    <li>- Lấy G từ <b><i>O</i></b>.</li>
                    <li>- Duyệt G. Do G là nút cần tìm nên ta không thêm đỉnh kề của G vào O nữa, đồng thời dừng vòng lặp.</li>
                    <li>- <b><i>C</i></b> = {A, B, C, D, G}.</li>
                    <li>- <b><i>O</i></b> = [].</li>
                </ul>
                <p>Kiểm tra lại đường đi bằng cách truy ngược <b><i>Father</i></b>, ta có:</p>
                <p><b>G &larr; D &larr; B &larr; A</b> hoặc <b>G &larr; D &larr; C &larr; A</b></p>
                <p");
            WriteLiteral(@">Vậy, đường đi từ A đến G là: <b>A &rarr; B &rarr; D &rarr; G</b> hoặc <b>A &rarr; C &rarr; D &rarr; G</b>.</p>
                <br />
            </div>
        </div>

        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai2"">
                    Bài 2: Áp dụng tìm kiếm theo chiều sâu để tìm đường đi từ A tới G trong đồ thị sau:
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "353ce422d2f2c1fe0f86cfabea434ee6ab7e11f59158", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                </a>
            </div>
            <div id=""Bai2"" class=""collapse container"" data-parent=""#accordion"" style=""height: 40vh; overflow-y: scroll;"">
                <br />
                <u><b>Ý tưởng bài toán</b></u>
                <p>Ta có thuật giải tìm kiếm đường đi từ A -> G theo chiều rộng như sau:</p>
                <p><b><i>O</i></b> = [A], <b><i>C</i></b> = {}</p>
                <p>While <b><i>O</i></b> rỗng {</p>
                <ul>
                    <li> - Lấy p từ đầu <b><i>O</i></b>.</li>
                    <li> - Duyệt p.</li>
                    <li> - Bỏ p vào <b><i>C</i></b>.</li>
                    <li> - Với mỗi q kề p, q không thuộc <b><i>C</i></b>: Bỏ q vào đầu <b><i>O</i></b>.</li>
                </ul>
                <p>}</p>
                <hr />
                <u><b>Bài giải:</b></u>
                <p>Ta có: <b><i>O</i></b> = [A]; <b><i>C</i></b> = {};</p>
                <p>Gọi <b><i>Father</i></b> là biến lưu cha của mỗi đỉnh trên đường ");
            WriteLiteral(@"đi</p>
                <p><b>Bước 1:</b></p>
                <ul>
                    <li>- Lấy A từ <b><i>O</i></b>.</li>
                    <li>- Duyệt A.</li>
                    <li>- <b><i>C</i></b> = {A}.</li>
                    <li>- <b><i>O</i></b> = [B, C].</li>
                    <li>- <b><i>Father</i></b>[B,C] = A.</li>
                </ul>
                <p><b>Bước 2:</b></p>
                <ul>
                    <li>- Lấy B từ <b><i>O</i></b>.</li>
                    <li>- Duyệt B.</li>
                    <li>- <b><i>C</i></b> = {A, B}.</li>
                    <li>- <b><i>O</i></b> = [D, C].</li>
                    <li>- <b><i>Father</i></b>[D] = B. Chọn D vì C và B không kề nhau.</li>
                </ul>
                <p><b>Bước 3:</b></p>
                <ul>
                    <li>- Lấy D từ <b><i>O</i></b>.</li>
                    <li>- Duyệt D.</li>
                    <li>- <b><i>C</i></b> = {A, B, D}.</li>
                    <li>- <b><i>O</i></b> = ");
            WriteLiteral(@"[G, C].</li>
                    <li>- <b><i>Father</i></b>[G] = D. <b><i>Father</i></b>[C] = D</li>
                </ul>
                <p><b>Bước 4:</b></p>
                <ul>
                    <li>- Lấy G từ <b><i>O</i></b>.</li>
                    <li>- Duyệt G. Do G là nút cần tìm nên ta không thêm đỉnh kề của G vào O nữa, đồng thời dừng vòng lặp.</li>
                    <li>- <b><i>C</i></b> = {A, B, D, G}.</li>
                    <li>- <b><i>O</i></b> = [C].</li>
                </ul>
                <p>Kiểm tra lại đường đi bằng cách truy ngược <b><i>Father</i></b>, ta có:</p>
                <p><b>G &larr; D &larr; B &larr; A</b>
                <p>Vậy, đường đi từ A đến G là: <b>A &rarr; B &rarr; D &rarr; G</b></p>
                <br />
            </div>
        </div>
    </div>
    <hr />
</div>
<div>
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
