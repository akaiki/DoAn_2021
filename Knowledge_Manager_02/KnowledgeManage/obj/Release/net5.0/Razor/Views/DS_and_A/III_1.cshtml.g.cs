#pragma checksum "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\DS_and_A\III_1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1d69c75c37f671df9c14be6aca36ba4e110eef46"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DS_and_A_III_1), @"mvc.1.0.view", @"/Views/DS_and_A/III_1.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\_ViewImports.cshtml"
using KnowledgeManage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\_ViewImports.cshtml"
using KnowledgeManage.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d69c75c37f671df9c14be6aca36ba4e110eef46", @"/Views/DS_and_A/III_1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d8b91396dfbb5c43e5379ee682f129446bb1c6c7", @"/Views/_ViewImports.cshtml")]
    public class Views_DS_and_A_III_1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Akaiki\source\repos\KnowledgeManage\KnowledgeManage\Views\DS_and_A\III_1.cshtml"
  
    ViewData["Title"] = "III_1";
    Layout = "~/Views/DS_and_A/Menu.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div id=""accordion"" style=""padding-left: 15%; padding-right: 15%; "">
    <h1>BÀI TẬP VỀ MẢNG</h1>
    <p class=""alert-warning"">BẠN CÓ THỂ NHẤN VÀO ĐỂ XEM BÀI GIẢI</p>
    <h3>Bài tập phổ biến</h3>
    <div id=""accordion1"">
        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai1"">
                    Bài 1. Nhập từ bàn phím mảng số nguyên gồm n phần tử. Tính trung bình cộng các số lẻ ở vị trí chẵn
                </a>
            </div>
            <div id=""Bai1"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
const int MAX = 100000;
int arr[MAX];
 
int main(){
    int n;
    printf(""\nNhap so luong phan tu n = "");
    scanf(""%d"", &n);
    
    // Nhap mang
    for(int i = 0;i < n; ++i){
        printf(""\nNhap a[%d] = "", i);
        scanf(""%d"", &arr[i]);
    }

    int");
            BeginWriteAttribute("sum", " sum =", 1077, "", 1083, 0);
            EndWriteAttribute();
            WriteLiteral(" 0;\r\n    int");
            BeginWriteAttribute("count", " count =", 1095, "", 1103, 0);
            EndWriteAttribute();
            WriteLiteral(" 0;\r\n    for(int");
            BeginWriteAttribute("i", " i =", 1119, "", 1123, 0);
            EndWriteAttribute();
            WriteLiteral(" 1; i < n; i+=2){\r\n        if(arr[i] %");
            BeginWriteAttribute("2", " 2 =", 1161, "", 1165, 0);
            EndWriteAttribute();
            WriteLiteral(@"= 1){
            ++count;
            sum += arr[i];
        }
    }
    printf(""\nTrung binh cong = %f"", (float)sum/count);
}
</code> 
</pre>
            </div>
        </div>

        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai2"">
                    Bài 2. Nhập từ bàn phím mảng số nguyên gồm n phần tử. Tìm số lớn nhất trong mảng vừa nhập
                </a>
            </div>
            <div id=""Bai2"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
const int MAX = 100000;
int arr[MAX];
 
int main(){
    int n;
    printf(""\nNhap so luong phan tu n = "");
    scanf(""%d"", &n);
    
    // Nhap mang
    for(int i = 0;i < n; ++i){
        printf(""\nNhap a[%d] = "", i);
        scanf(""%d"", &arr[i]);
    }
    int");
            BeginWriteAttribute("maxNum", " maxNum =", 2103, "", 2112, 0);
            EndWriteAttribute();
            WriteLiteral(" arr[0];\r\n    for(int");
            BeginWriteAttribute("i", " i =", 2133, "", 2137, 0);
            EndWriteAttribute();
            WriteLiteral(@" 1;i < n;++i){
        if(arr[i] > maxNum) maxNum = arr[i];
    }
    printf(""\nPhan tu lon nhat: %d"", maxNum);
}
</code> 
</pre>
            </div>
        </div>

        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai3"">
                    Bài 3. Nhập từ bàn phím mảng số nguyên gồm n phần tử. Tìm vị trí các số nhỏ nhất trong mảng
                </a>
            </div>
            <div id=""Bai3"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
const int MAX = 100000;
int arr[MAX];
 
int main(){
    int n;
    printf(""\nNhap so luong phan tu n = "");
    scanf(""%d"", &n);
    
    // Nhap mang
    for(int i = 0;i < n; ++i){
        printf(""\nNhap a[%d] = "", i);
        scanf(""%d"", &arr[i]);
    }
    // Can lam 2 buoc:
    //     1. Tim gia tri nho nhat minNum.
    //     2. In ra cac vi tri co gia");
            BeginWriteAttribute("tri", " tri =", 3159, "", 3165, 0);
            EndWriteAttribute();
            WriteLiteral(" minNum\r\n    // Luu y: Vi");
            BeginWriteAttribute("tri", " tri =", 3190, "", 3196, 0);
            EndWriteAttribute();
            WriteLiteral(" chi so + 1\r\n    \r\n    // Tim gia tri nho nhat\r\n    int");
            BeginWriteAttribute("minNum", " minNum =", 3251, "", 3260, 0);
            EndWriteAttribute();
            WriteLiteral(" arr[0];\r\n    for(int");
            BeginWriteAttribute("i", " i =", 3281, "", 3285, 0);
            EndWriteAttribute();
            WriteLiteral(" 1;i < n;++i){\r\n        if(arr[i] < minNum)");
            BeginWriteAttribute("minNum", " minNum =", 3328, "", 3337, 0);
            EndWriteAttribute();
            WriteLiteral(@" arr[i];
    }
    
    // In ra vi tri co gia tri nho nhat
    printf(""\nVi tri co gia tri nho nhat la: "");
    for(int i = 0;i < n;++i){
        if(arr[i] == minNum) printf(""%d "", i+1);
    }
}
</code> 
</pre>
            </div>
        </div>

        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai4"">
                    Bài 4. Nhập từ bàn phím mảng số nguyên gồm n phần tử. Đếm các số chính phương có trong mảng
                </a>
            </div>
            <div id=""Bai4"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
#include &lt; math.h &gt; // Su dung ham sqrt
const int MAX = 100000;
int arr[MAX];
 
int main(){
    int n;
    printf(""\nNhap so luong phan tu n = "");
    scanf(""%d"", &n);
    
    // Nhap mang
    for(int i = 0;i < n; ++i){
        printf(""\nNhap a[%d] = "", i);
        scan");
            WriteLiteral(@"f(""%d"", &arr[i]);
    }
    // So chinh phuong la so co can la so nguyen nhu: 1, 4, 9,...
    int scp = 0;
    float rs;
    for(int i = 0;i < n;++i){
        rs = sqrt(arr[i]);
        if(rs == (int)rs) ++scp;
    }
    printf(""\nMang co %d so chinh phuong!"", scp);
}
</code> 
</pre>
            </div>
        </div>

        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai5"">
                    Bài 5. Nhập từ bàn phím mảng số nguyên gồm n phần tử. Hiện thị các số nguyên tố có trong mảng lên màn hình
                </a>
            </div>
            <div id=""Bai5"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
const int MAX = 100000;
int arr[MAX];
 
int main(){
    int n;
    printf(""\nNhap so luong phan tu n = "");
    scanf(""%d"", &n);
    
    // Nhap mang
    for(int i = 0;i < n; ++i){
        ");
            WriteLiteral(@"printf(""\nNhap a[%d] = "", i);
        scanf(""%d"", &arr[i]);
    }
    // So nguyen to la so chi co 2 uoc duy nhat la 1 va chinh no.
    // So nguyen to nho nhat la so 2
    printf(""\nCac so nguyen to co trong mang la: "");
    bool snt;
    for(int i = 0;i < n;i++){
        // Kiem tra a[i] co phai so nguyen to?
        // gia su no la so nguyen to
        // Neu no chia het cho so bat ky trong [2, a[i]] -> khong phai so nguyen to
        snt = true;
        for(int j = 2;j < arr[i]; ++j){
            if(arr[i] % j == 0) 
                snt = false;
        }
        if(arr[i] >= 2 && snt == true) 
            printf(""%d "", arr[i]);
    }
}
</code> 
</pre>
            </div>
        </div>

        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai6"">
                    Bài 6. Nhập từ bàn phím mảng số nguyên gồm n phần tử. Thay thế các phần tử âm có trong mảng bằng giá trị 0
                </a>
       ");
            WriteLiteral(@"     </div>
            <div id=""Bai6"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
const int MAX = 100000;
int arr[MAX];
 
int main(){
    int n;
    printf(""\nNhap so luong phan tu n = "");
    scanf(""%d"", &n);
    
    // Nhap mang
    for(int i = 0;i < n; ++i){
        printf(""\nNhap a[%d] = "", i);
        scanf(""%d"", &arr[i]);
    }
    for(int i = 0;i < n;++i){
        if(arr[i] < 0) 
            arr[i] = 0;
    }

}
</code> 
</pre>
            </div>
        </div>

        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai7"">
                    Bài 7. Nhập từ bàn phím mảng số nguyên gồm n phần tử. Xóa các phần tử âm có trong mảng
                </a>
            </div>
            <div id=""Bai7"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" clas");
            WriteLiteral(@"s=""card-body"">
<code>
#include &lt; stdio.h &gt;
const int MAX = 100000;
int arr[MAX];
 
int main(){
    int n;
    printf(""\nNhap so luong phan tu n = "");
    scanf(""%d"", &n);
    
    // Nhap mang
    for(int i = 0;i < n; ++i){
        printf(""\nNhap a[%d] = "", i);
        scanf(""%d"", &arr[i]);
    }
   for(int i = 0;i < n;++i){
        if(arr[i] < 0){
            for(int j = i; j < n-1;j++){
                arr[j] = arr[j+1];
            }
            --n;
        }
    }
}
</code> 
</pre>
            </div>
        </div>

        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai8"">
                    Bài 8. Nhập từ bàn phím mảng số nguyên gồm n phần tử. Sắp xếp mảng đã nhập theo thứ tự tăng dần
                </a>
            </div>
            <div id=""Bai8"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &l");
            WriteLiteral(@"t; stdio.h &gt;
const int MAX = 100000;
int arr[MAX];
 
int main(){
    int n;
    printf(""\nNhap so luong phan tu n = "");
    scanf(""%d"", &n);
    
    // Nhap mang
    for(int i = 0;i < n; ++i){
        printf(""\nNhap a[%d] = "", i);
        scanf(""%d"", &arr[i]);
    }
    int tg;
    for(int i = 0;i < n-1;++i){
        for(int j = i+1; j < n;++j){
            if(arr[i] > arr[j]){
                // Hoan vi
                tg = arr[i];
                arr[i] = arr[j];
                arr[j] = tg;
            }
        }
    }
}
</code> 
</pre>
            </div>
        </div>
    </div>
    <hr />
    <h3>Nhập/xuất mảng 1 chiều</h3>
    <div id=""accordion2"">
        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai9"">
                    Bài 9. Nhập vào 1 dãy số nguyên. Hiển thị dãy số đó ra màn hình.
                </a>
            </div>
            <div id=""Bai9"" class=""collapse"" data-pa");
            WriteLiteral(@"rent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
#include &lt; conio.h &gt;
int main(){
    int a[50];
    int i,n;
    // Nhap 1 day so nguyen
    printf(""Nhap so phan tu mang: "");
    scanf(""%d"",&n);
    for(i=0; i < n; i++)
    {
        scanf(""%d"",&a[i]);
    }    

    //Hien thi ra man hinh
    printf(""\nMang vua nhap la:"");
    for(i=0; i < n; i++)
    {
        printf(""%5d"",a[i]);
    }
    getch();

}
</code> 
</pre>
            </div>
        </div>
    </div>
    <hr />
    <h3>Bài tập in ra các số nguyên tố trong mảng</h3>
    <div id=""accoridon3"">
        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai10"">
                    Bài 10. Nhập 1 dãy số nguyên đưa ra màn hình các số nguyên tố có trong mảng, vị trí các số đó trong mảng.
                </a>
            </div>
            <div id=""Bai10"" class=""coll");
            WriteLiteral(@"apse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
#include &lt; conio.h &gt;
int main(){
    int a[50];
    int i,n,j,kt;
    printf(""Nhap so luong phan tu:"");
    scanf(""%d"",&n);
    for(i=0; i < n; i++)
    {
        scanf(""%d"",&a[i]);
    }    
    printf(""\nCac so nguyen to co trong  mang va vi tri cac so do trong mang la:"");
    for(i=0; i < n; i++)
    {
        kt=0;
        for(j=2;j<=a[i]/2;j++)
        {
            if(a[i]%j==0)
            kt=1;    
        }
        if(kt==0)
        printf(""\nso nguyen to %d vi tri %d trong mang "", a[i], i );
    }
    getch();
}
</code> 
</pre>
            </div>
        </div>
    </div>
    <hr />
    <h3>Bài tập sắp xếp mảng, tìm trung bình cộng</h3>
    <p>Nhập một dãy số nguyên không quá 50 phần tử.</p>
    <div id=""accordion4"">
        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-");
            WriteLiteral(@"toggle=""collapse"" href=""#Bai11"">
                    Bài 11. Đưa ra màn hình số lớn nhất có trong dãy và vị trí của nó trong dãy.
                </a>
            </div>
            <div id=""Bai11"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
#include &lt; conio.h &gt;
int main(){
    int a[50];
    int i,n,tg,max,j,s=0; 
    printf(""nhap vao so phan tu: ""); 
    scanf(""%d"",&n);
 
    max=a[0];
    for(i=1; i < n; i++)
    {
        if( a[i] > max)
        {
            max =a[i];
        }
    }
    printf(""\nSo lon nhat =%d"",max);
    printf(""\nvi tri cua gia tri lon nhat trong day la: "");
    for(i=0; i < n; i++)
    {
        if (a[i] == max)
        {
            printf( ""%6d"", i+1);
        }
    }
    getch();
}
</code> 
</pre>
            </div>
        </div>

        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" ");
            WriteLiteral(@"data-toggle=""collapse"" href=""#Bai12"">
                    Bài 12. Sắp xếp dãy số theo giá trị các phần tử tăng dần.
                </a>
            </div>
            <div id=""Bai12"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
#include &lt; conio.h &gt;
int main(){
    int a[50];
    int i,n,tg,max,j,s=0; 
    printf(""nhap vao so phan tu: ""); 
    scanf(""%d"",&n);

    for(i=0; i < n-1; i++)
       for(j=i+1; j < n; j++)
       {
        if(a[i] > a[j])
          {
            tg=a[i];
             a[i]=a[j];
              a[j]=tg;
           } 
       }
    printf(""\nday so sau khi sap xep la:"");
       for(i=0; i < n; i++)
       {
          printf(""%6d"",a[i]);
    }
    getch();
}
</code> 
</pre>
            </div>
        </div>

        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai13"">");
            WriteLiteral(@"
                    Bài 13. Tính tổng và trung bình cộng các số có trong dãy.
                </a>
            </div>
            <div id=""Bai13"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
#include &lt; conio.h &gt;
int main(){
    int a[50];
    int i,n,tg,max,j,s=0; 
    printf(""nhap vao so phan tu: ""); 
    scanf(""%d"",&n);

    for(i=0; i < n; i++)
    {
        s = s+a[i];
    }
    printf(""\nTong cac so trong day la: %d"",s);
    printf(""\nTrung binh cong cac so trong day la: %f"", (float)s/n);
    getch();
}
</code> 
</pre>
            </div>
        </div>
    </div>
    <hr />
    <h3>Bài tập chèn phần tử vào mảng</h3>
    <div id=""accordion5"">
        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai14"">
                    Bài 14. Nhập 1 dãy n số nguyên (0 < n < 30). Và thực hiện:
       ");
            WriteLiteral(@"             <ul>
                        <li>1.Đưa ra màn hình các số chẵn và vị trí số chẵn đó trong dãy. </li>
                        <li>2.Sắp xếp dãy số theo giá trị các phần tử giảm dần. </li>
                        <li>3.Chèn số X vào dãy sao cho sau khi chèn gái trị các phần tử vẫn giảm dần(x nhập từ bàn phím).</li>
                    </ul>
                </a>
            </div>
            <div id=""Bai14"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
#include &lt; conio.h &gt;
int main(){
    int a[30],i,j, n,tg,v,x;
    printf(""Nhap vao so phan tu: ""); 
    scanf(""%d"", &n);
    for(i=0; i < n; i++)
    {
        scanf(""%d"",&a[i]);
    }

                <b>//1.Đưa ra màn hình các số chẵn và vị trí số chẵn đó trong dãy. </b>
    printf(""\nCac so chan trong day va vi tri cac so do trong day la:"");
    for(i=0; i < n; i++)
    {
        if( a[i]%2 == 0)
        {
          ");
            WriteLiteral(@"  printf(""\nso %d dung thu %d trong day"", a[i], i+1);
        }
    }


                <b>//2.Sắp xếp dãy số theo giá trị các phần tử giảm dần. </b>
    for(i=0; i < n-1; i++)
    {
        for(j=i+1; j < n; j++)
        {
            if(a[i] < a[j])
            {
                tg = a[i];
                a[i] = a[j];
                a[j] = tg;
            }
        }
    }
    
    printf(""\nDay so sau khi sap xep la:"");
    for(i=0; i < n; i++)
    {
        printf(""%5d"",a[i]);
    }


                <b>//3.Chèn số X vào dãy sao cho sau khi chèn gái trị các phần tử vẫn giảm dần(x nhập từ bàn phím).</b>
    printf(""\nNhap gia tri can chen X:""); 
    scanf(""%d"", &x);
    v=0; 
    i=0;
    while(a[i]>x)
    {    
        i++;
    } 
    v=i;    
    for(i=n-1; i >= v; i--)
    {
        a[i+1]=a[i];
    }
    a[v]=x;
    printf(""\n Day so sau khi chen la:"");
    for(i=0;i < n+1; i++)
    {
        printf(""%5d"", a[i]);
    }

    getch();
}
</code> 
</pre>
");
            WriteLiteral(@"            </div>
        </div>
    </div>
    <hr />
    <h3>Bài tập tổng hợp</h3>
    <div id=""accordion6"">
        <div class=""card"">
            <div class=""card-header"">
                <a class=""card-link"" data-toggle=""collapse"" href=""#Bai15"">
                    Bài 15. Nhập dãy số nguyên 50 phần tử, đưa ra màn hình trung bình cộng các số chia hết cho 3 có trong dãy. Chèn số X và vị trí thứ k trong dãy (x, k nhập từ bàn phím)
                </a>
            </div>
            <div id=""Bai15"" class=""collapse"" data-parent=""#accordion"">
<pre style=""overflow: auto; font-family:Consolas"" class=""card-body"">
<code>
#include &lt; stdio.h &gt;
#include &lt; conio.h &gt;
int main(){
    int a[50];
    int i,n,t=0,k,x,d=0;
    printf(""Nhap vao so phan tu: ""); 
    scanf(""%d"", &n);
    for(i=0;i < n; i++)
    {
        scanf(""%d"",&a[i]);
    }
                <b>//In ra màn hình trung bình cộng các số chia hết cho 3</b>
    for(i=0;i < n; i++)
    {
        if(a[i]%3 == 0)
        ");
            WriteLiteral(@"{    
            t=t+a[i]; 
            d=d+1;
        }
    }
    if(d==0)    
    {
        printf(""khong co so chia het cho 3 trong day"");
    }
    else
    {
        printf(""TBC so chia het cho 3 trong day la %f"", (float)t/d);
    }
                <b>//Chèn số X vào vị trí thứ k trong dãy</b>
    printf(""\nNhap gia tri va vi tri can chen x,k= ""); 
    scanf(""%d%d"", &x,&k);
    for(i=n-1;i >= k; i--)
    {
        a[i+1]=a[i];
    }
    a[k]=x;
    printf(""\n Day so sau khi chen la:"");
    for(i=0;i < n+1; i++)
    {
        printf(""%5d"", a[i]);
    }

    getch();
}
</code> 
</pre>
            </div>
        </div>
    </div>
</div>
<div>
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
