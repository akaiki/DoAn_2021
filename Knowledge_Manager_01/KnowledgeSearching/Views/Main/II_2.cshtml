
@{
    ViewData["Title"] = "Nhân tố thời gian";
    Layout = "~/Views/Main/Menu.cshtml";
}

<div class="container">
    <h2>Độ phức tạp thời gian (Time Complexity) trong phân tích giải thuật</h2>
    <p>Nhân tố thời gian của một giải thuật biểu diễn lượng thời gian chạy cần thiết từ khi bắt đầu cho đến khi kết thúc một giải thuật. Thời gian yêu cầu có thể được biểu diễn bởi một hàm <b>T(n)</b>, trong đó T(n) có thể được đánh giá như là số các bước.</p>
    <p>Ví dụ, phép cộng hai số nguyên n-bit sẽ có n bước. Do đó, tổng thời gian tính toán sẽ là <b>T(n) = c*n</b>, trong đó <b>c</b> là thời gian để thực hiện phép cộng hai bit. Ở đây, chúng ta xem xét hàm T(n) tăng tuyến tính khi kích cỡ dữ liệu đầu vào tăng lên.</p>
    <hr />

    <p>Thời gian thực hiện giải thuật được xét trên những khía cạnh sau:</p>
    <ul>
        <li><b>Thời gian thực hiện chương trình</b></li>
        <li><b>Đơn vị đo thời gian thực hiện</b></li>
        <li><b>Thời gian thực hiện trong trường hợp xấu nhất</b></li>
    </ul>

    <hr />

    <h3>2.1 Thời gian thực hiện chương trình</h3>
    <p>Thời gian thực hiện một chương trình là một hàm của kích thước dữ liệu vào, ký hiệu T(n)T(n) trong đó nn là kích thước (độ lớn) của dữ liệu vào.</p>
    <p>Ví dụ: Chương trình tính tổng của nn số có thời gian thực hiện là T(n) = cnT(n)\=cn trong đó cc là một hằng số.</p>
    <hr />
    <h3>2.2 Đơn vị đo thời gian thực hiện</h3>
    <p>Đơn vị của T(n)T(n) không phải là đơn vị đo thời gian bình thường như giờ, phút giây… mà thường được xác định bởi số các lệnh được thực hiện trong một máy tính lý tưởng.</p>
    <p>Ví dụ: Khi ta nói thời gian thực hiện của một chương trình là T(n) = cnT(n)\=cn thì có nghĩa là chương trình ấy cần cncn chỉ thị thực thi.</p>
    <hr />
    <h3>2.3 Thời gian thực hiện trong trường hợp xấu nhất</h3>
    <p>Nói chung thì thời gian thực hiện chương trình không chỉ phụ thuộc vào kích thước mà còn phụ thuộc vào tính chất của dữ liệu vào. Nghĩa là dữ liệu vào có cùng kích thước nhưng thời gian thực hiện chương trình có thể khác nhau. Chẳng hạn chương trình sắp xếp dãy số nguyên tăng dần, khi ta cho vào dãy có thứ tự thì thời gian thực hiện khác với khi ta cho vào dãy chưa có thứ tự, hoặc khi ta cho vào một dãy đã có thứ tự tăng thì thời gian thực hiện cũng khác so với khi ta cho vào một dãy đã có thứ tự giảm.</p>
    <p>Vì vậy thường ta coi T(n)T(n) là thời gian thực hiện chương trình trong trường hợp xấu nhất trên dữ liệu vào có kích thưóc nn, tức là: T(n)T(n) là thời gian lớn nhất để thực hiện chương trình đối với mọi dữ liệu vào có cùng kích thước nn.</p>

    <hr />
    <p>
        Bạn có thể tham khảo các mục sau:
    </p>
    <ul>
        <li><a href="II_1"><b>Độ phức tạp của thuật toán là gì</b></a></li>
        <li><a href="II_3"><b>Nhân tố bộ nhớ (Độ phức tạp bộ nhớ)</b></a></li>
        <li><a href="II_4"><b>Cách tính độ phức tạp của thuật toán</b></a></li>
    </ul>
</div>