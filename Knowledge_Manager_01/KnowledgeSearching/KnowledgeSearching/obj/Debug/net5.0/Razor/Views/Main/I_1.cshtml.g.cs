#pragma checksum "D:\DoAn_2021\Knowledge_Manager_01\KnowledgeSearching\KnowledgeSearching\Views\Main\I_1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b5329b9875cc6284fcd930b4f67a830cad2591c7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Main_I_1), @"mvc.1.0.view", @"/Views/Main/I_1.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\DoAn_2021\Knowledge_Manager_01\KnowledgeSearching\KnowledgeSearching\Views\_ViewImports.cshtml"
using KnowledgeSearching;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\DoAn_2021\Knowledge_Manager_01\KnowledgeSearching\KnowledgeSearching\Views\_ViewImports.cshtml"
using KnowledgeSearching.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b5329b9875cc6284fcd930b4f67a830cad2591c7", @"/Views/Main/I_1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"55c93d07d287d648d202a547ac41ea2a162bac7c", @"/Views/_ViewImports.cshtml")]
    public class Views_Main_I_1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\DoAn_2021\Knowledge_Manager_01\KnowledgeSearching\KnowledgeSearching\Views\Main\I_1.cshtml"
  
    ViewData["Title"] = "I_1";
    Layout = "~/Views/Main/Menu.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div class=""container"">
    <h2>Cấu trúc dữ liệu (Data Structure) là gì ?</h2>
    <blockquote>
        <p>Cấu trúc dữ liệu là cách lưu trữ, tổ chức dữ liệu có thứ tự, có hệ thống để dữ liệu có thể được sử dụng một cách hiệu quả. </p>
    </blockquote>
    <p>Dưới đây là hai khái niệm nền tảng hình thành nên một cấu trúc dữ liệu:</p>
    <ul>
        <li><p><b>Interface</b>: Mỗi cấu trúc dữ liệu có một Interface. Interface biểu diễn một tập hợp các phép tính mà một cấu trúc dữ liệu hỗ trợ. Một Interface chỉ cung cấp danh sách các phép tính được hỗ trợ, các loại tham số mà chúng có thể chấp nhận và kiểu trả về của các phép tính này.</p></li>
        <li><p><b>Implementation</b> (có thể hiểu là sự triển khai): Cung cấp sự biểu diễn nội bộ của một cấu trúc dữ liệu. Implementation cũng cung cấp phần định nghĩa của giải thuật được sử dụng trong các phép tính của cấu trúc dữ liệu.</p></li>
    </ul>
    <hr />
    <h2>Thuật ngữ cơ bản trong Cấu trúc dữ liệu</h2>
    <ul>
        <li><p><b>Dữ liệu</");
            WriteLiteral(@"b>: Dữ liệu là các giá trị hoặc là tập hợp các giá trị.</p></li>
        <li><p><b>Phần tử dữ liệu</b>: Phần tử dữ liệu là một đơn vị đơn lẻ của giá trị.</p></li>
        <li><p><b>Các phần tử nhóm</b>: Phần tử dữ liệu mà được chia thành các phần tử con thì được gọi là các phần tử nhóm.</p></li>
        <li><p><b>Các phần tử cơ bản</b>: Phần tử dữ liệu mà không thể bị chia nhỏ thành các phần tử con thì gọi là các phần tử cơ bản.</p></li>
        <li><p><b>Thuộc tính và Thực thể</b>: Một thực thể là cái mà chứa một vài thuộc tính nào đó, và các thuộc tính này có thể được gán các giá trị.</p></li>
        <li><p><b>Tập hợp thực thể</b>: Các thực thể mà có các thuộc tính tương tự nhau thì cấu thành một tập hợp thực thể.</p></li>
        <li><p><b>Trường</b>: Trường là một đơn vị thông tin cơ bản biểu diễn một thuộc tính của một thực thể.</p></li>
        <li><p><b>Bản ghi</b>: Bản ghi là một tập hợp các giá trị trường của một thực thể đã cho.</p></li>
        <li><p><b>File</b>: Là một tập hợp các bản gh");
            WriteLiteral(@"i của các thực thể trong một tập hợp thực thể đã cho.</p></li>
    </ul>
    <hr />
    <p>
        Dưới đây là một số cấu trúc dữ liệu thường gặp:
    </p>
    <ul>
        <li><a href=""IV_1""><b>Cấu trúc dữ liệu ngăn xếp (Stack)</b></a></li>
        <li><a href=""IV_2""><b>Cấu trúc dữ liệu hàng đợi (Queue)</b></a></li>
        <li><a href=""IV_3""><b>Cấu trúc dữ liệu mảng (array)</b></a></li>
        <li><a href=""IV_4""><b>Cấu trúc dữ liệu danh sách liên kết (Linked list)</b></a></li>
        <li><a href=""IV_5""><b>Cấu trúc dữ liệu cây (Tree)</b></a></li>
        <li><a href=""IV_6""><b>Cấu trúc dữ liệu đồ thị (Graph)</b></a></li>
    </ul>
    <hr />
    <p>
        Bạn có thể tham khảo các mục sau:
    </p>
    <ul>
        <li><a href=""I_2""><b>Giải thuật là gì</b></a></li>
        <li><a href=""I_3""><b>Phân tích tiệm cận trong cấu trúc dữ liệu và giải thuật</b></a></li>
        <li><a href=""IV""><b>Cấu trúc dữ liệu</b></a></li>
    </ul>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
