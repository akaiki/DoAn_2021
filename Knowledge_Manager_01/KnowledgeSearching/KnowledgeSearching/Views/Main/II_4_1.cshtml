
@{
    ViewData["Title"] = "Quy tắc bỏ hằng số";
    Layout = "~/Views/Main/Menu.cshtml";
}

<div class="container">
    <h2>Quy tắc bỏ hằng số</h2>

    <blockquote>
        Nếu đoạn chương trình P có thời gian thực hiện T(n) = O(c1.f(n)) với c1 là một hằng số dương thì có thể coi đoạn chương trình đó có độ phức tạp tính toán là O(f(n)).
    </blockquote>

    <hr />
    <p>Ví dụ:</p>
    <p>
        Theo <a href="II_4_4"><b>quy tắc tổng quát </b></a> và các <a href="II_4"><b>quy tắc khác</b></a>, ta tính được độ phức tạp của một thuật toán là một hàm số f(n) = n.(n+1)/2
    </p>
    <p>
        Từ đó, theo quy tắc <b>bỏ hằng số</b>, ta xác đinh được độ phức tạp của thuật toán trên là O(n²).
    </p>

    <hr />
    <p>
        Sau đây là một số quy tắc liên quan
    </p>
    <ul>
        <li><a href="II_4_2"><b>Quy tắc cộng - lấy max</b></a></li>
        <li><a href="II_4_3"><b>Quy tắc nhân</b></a></li>
        <li><a href="II_4_4"><b>Quy tắc tổng quát</b></a></li>
    </ul>
    <hr />
    <p>
        Bạn có thể tham khảo các mục sau:
    </p>
    <ul>
        <li><a href="II_5"><b>Ví dụ tính độ phức tạp của thuật toán</b></a></li>
        <li><a href="II"><b>Độ phức tạp của thuật toán</b></a></li>
        <li><a href="I_3_2"><b>Big Oh Notation, &Omicron; trong Cấu trúc dữ liệu và giải thuật</b></a></li>
        <li><a href="I_3_5"><b>Ví dụ độ phức tạp trong cấu trúc dữ liệu và giải thuật</b></a></li>
        <li><a href="II_4"><b>Các quy tắc để xác định độ phức tạp của giải thuật</b></a></li>

    </ul>
</div>