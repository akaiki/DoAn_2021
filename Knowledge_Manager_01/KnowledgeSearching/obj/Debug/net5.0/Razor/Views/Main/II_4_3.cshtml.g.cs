#pragma checksum "C:\Users\Akaiki\source\repos\KnowledgeSearching\KnowledgeSearching\Views\Main\II_4_3.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "38e06cdccc7075a45b35778ef146412dc11ce6e7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Main_II_4_3), @"mvc.1.0.view", @"/Views/Main/II_4_3.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Akaiki\source\repos\KnowledgeSearching\KnowledgeSearching\Views\_ViewImports.cshtml"
using KnowledgeSearching;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Akaiki\source\repos\KnowledgeSearching\KnowledgeSearching\Views\_ViewImports.cshtml"
using KnowledgeSearching.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"38e06cdccc7075a45b35778ef146412dc11ce6e7", @"/Views/Main/II_4_3.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"55c93d07d287d648d202a547ac41ea2a162bac7c", @"/Views/_ViewImports.cshtml")]
    public class Views_Main_II_4_3 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Akaiki\source\repos\KnowledgeSearching\KnowledgeSearching\Views\Main\II_4_3.cshtml"
  
    ViewData["Title"] = "Quy tắc nhân";
    Layout = "~/Views/Main/Menu.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""container"">
    <h2>Quy tắc nhân</h2>

    <blockquote>
        Nếu T1(n) và T2(n) là thời gian thực hiện của hai đoạn chương trình P1và P2 và T1(n) = O(f(n)), T2(n) = O(g(n)) thì thời gian thực hiện của đoạn hai đoạn chương trình đó lồng nhau là T(n) = O(f(n).g(n))
    </blockquote>

    <hr />
    <p>Ví dụ:</p>
    <p>
        Dễ gặp nhất khi ta áp dụng quy tắc này là trường hợp các vòng lặp chồng nhau hoặc trong giải thuật <a href=""III_5""><b>đệ quy</b></a>. Lấy ví dụ đoạn code nhỏ sau:
    </p>
    <div class=""card"" style=""background-color: #cccccc"">
<pre style="" padding: 1em; margin: .5em 0; overflow: auto;"" class=""card-body""><code>for (int i = 0; i < n; i++){
    for (int");
            BeginWriteAttribute("j", " j =", 805, "", 809, 0);
            EndWriteAttribute();
            WriteLiteral(@" 0; j < m; j++){
        //lệnh
    }
}</code></pre>
    </div>

    <p>
        Khối lệnh for ở trong có thời gian thực hiện là O(m), tương tự, khối for bao hàm tất cả có thời gian thực hiện là O(n). Theo quy tắc nhân, ta tính được độ phức tạp của ví dụ trên là: <b>O(n*m)</b>
    </p>

    <hr />
    <p>
        Sau đây là một số quy tắc liên quan
    </p>
    <ul>
        <li><a href=""II_4_1""><b>Quy tắc bỏ hằng số</b></a></li>
        <li><a href=""II_4_2""><b>Quy tắc cộng - lấy max</b></a></li>
        <li><a href=""II_4_4""><b>Quy tắc tổng quát</b></a></li>
    </ul>
    <hr />
    <p>
        Bạn có thể tham khảo các mục sau:
    </p>
    <ul>
        <li><a href=""II_5""><b>Ví dụ tính độ phức tạp của thuật toán</b></a></li>
        <li><a href=""II""><b>Độ phức tạp của thuật toán</b></a></li>
        <li><a href=""I_3_2""><b>Big Oh Notation, &Omicron; trong Cấu trúc dữ liệu và giải thuật</b></a></li>
        <li><a href=""I_3_5""><b>Ví dụ độ phức tạp trong cấu trúc dữ liệu và giải thuật</");
            WriteLiteral("b></a></li>\r\n        <li><a href=\"II_4\"><b>Các quy tắc để xác định độ phức tạp của giải thuật</b></a></li>\r\n\r\n    </ul>\r\n</div>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
